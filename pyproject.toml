[build-system]
build-backend = "poetry_dynamic_versioning.backend"
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]

[tool.poetry]
authors = ["yag-im"]
description = "yag macroservices"
keywords = ["signaling"]
name = "webapi"
readme = "README.md"
version = "0.0.0"
packages = [{ include = "webapi" }]

[tool.poetry.dependencies]
python = "^3.11"
apispec = {extras = ["marshmallow"], version = "^6.4.0"}
apispec-webframeworks = {extras = ["flask"], version = "^1.0.0"}
blinker = "^1.7.0"
gunicorn = "^23.0.0"
flask-dance = {extras = ["sqla"], version = "^7.0.0"}
flask-login = "^0.6.3"
flask-restful = "^0.3.10"
flask-sqlalchemy = "^3.1.1"
marshmallow-dataclass = "^8.6.0"
opentelemetry-distro = "*"
opentelemetry-exporter-otlp = "*"
psycopg2 = "^2.9.9"
python-dateutil = "*"

[tool.poetry.group.dev.dependencies]
pre-commit = "*"
tox = "*"

[tool.poetry.group.test.dependencies]
pytest = "*"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "semver"

[tool.bandit.assert_used]
exclude = ["*_test.py", "test_*.py"]

[tool.black]
line-length = 120
exclude = '''
(
  \.git
  | \.tox
  | \.venv
  | venv
  | build
  | dist
)
'''

[tool.isort]
include_trailing_comma = true
force_grid_wrap = 2
use_parentheses = true
line_length = 120
profile = "black"
multi_line_output = 3
skip = "target"
skip_glob = "**/gen/*,.venv*/*,venv*/*,.tox/*"
known_first_party = "webapi"

[tool.mypy]
disallow_incomplete_defs = true
disallow_untyped_defs = true
ignore_missing_imports = true
plugins = "marshmallow_dataclass.mypy"

[tool.pytest.ini_options]
addopts = "-s -v"
markers = [
    "integration: marks integration tests",
    "unit: marks unittests"
]
testpaths = "tests"

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = True
skipsdist = True
skip_missing_interpreters = True

[testenv:lint]
skip_install = false
recreate = false
ignore_errors = false
deps =
    pre-commit
commands =
    pre-commit run --all-files

[testenv:test]
recreate = false
ignore_errors = true
deps =
    poetry
commands_pre =
    poetry install --with test
commands =
    poetry run pytest tests/
"""
